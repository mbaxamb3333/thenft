{"ast":null,"code":"'use strict';\n/**\n * Dependencies\n */\n\nconst EmailAddress = require('./email-address');\n\nconst toCamelCase = require('../helpers/to-camel-case');\n\nconst toSnakeCase = require('../helpers/to-snake-case');\n\nconst deepClone = require('../helpers/deep-clone');\n\nconst deepMerge = require('deepmerge');\n\nconst wrapSubstitutions = require('../helpers/wrap-substitutions');\n/**\n * Personalization class\n */\n\n\nclass Personalization {\n  /**\n   * Constructor\n   */\n  constructor(data) {\n    //Init array and object placeholders\n    this.to = [];\n    this.cc = [];\n    this.bcc = [];\n    this.headers = {};\n    this.customArgs = {};\n    this.substitutions = {};\n    this.substitutionWrappers = ['{{', '}}'];\n    this.dynamicTemplateData = {}; //Build from data if given\n\n    if (data) {\n      this.fromData(data);\n    }\n  }\n  /**\n   * From data\n   */\n\n\n  fromData(data) {\n    //Expecting object\n    if (typeof data !== 'object') {\n      throw new Error('Expecting object for Mail data');\n    } //Convert to camel case to make it workable, making a copy to prevent\n    //changes to the original objects\n\n\n    data = deepClone(data);\n    data = toCamelCase(data, ['substitutions', 'dynamicTemplateData', 'customArgs', 'headers']); //Extract properties from data\n\n    const {\n      to,\n      from,\n      cc,\n      bcc,\n      subject,\n      headers,\n      customArgs,\n      sendAt,\n      substitutions,\n      substitutionWrappers,\n      dynamicTemplateData\n    } = data; //Set data\n\n    this.setTo(to);\n    this.setFrom(from);\n    this.setCc(cc);\n    this.setBcc(bcc);\n    this.setSubject(subject);\n    this.setHeaders(headers);\n    this.setSubstitutions(substitutions);\n    this.setSubstitutionWrappers(substitutionWrappers);\n    this.setCustomArgs(customArgs);\n    this.setDynamicTemplateData(dynamicTemplateData);\n    this.setSendAt(sendAt);\n  }\n  /**\n   * Set subject\n   */\n\n\n  setSubject(subject) {\n    if (typeof subject === 'undefined') {\n      return;\n    }\n\n    if (typeof subject !== 'string') {\n      throw new Error('String expected for `subject`');\n    }\n\n    this.subject = subject;\n  }\n  /**\n   * Set send at\n   */\n\n\n  setSendAt(sendAt) {\n    if (typeof sendAt === 'undefined') {\n      return;\n    }\n\n    if (!Number.isInteger(sendAt)) {\n      throw new Error('Integer expected for `sendAt`');\n    }\n\n    this.sendAt = sendAt;\n  }\n  /**\n   * Set to\n   */\n\n\n  setTo(to) {\n    if (typeof to === 'undefined') {\n      return;\n    }\n\n    if (!Array.isArray(to)) {\n      to = [to];\n    }\n\n    this.to = EmailAddress.create(to);\n  }\n  /**\n   * Set from\n   * */\n\n\n  setFrom(from) {\n    if (typeof from === 'undefined') {\n      return;\n    }\n\n    this.from = EmailAddress.create(from);\n  }\n  /**\n   * Add a single to\n   */\n\n\n  addTo(to) {\n    if (typeof to === 'undefined') {\n      return;\n    }\n\n    this.to.push(EmailAddress.create(to));\n  }\n  /**\n   * Set cc\n   */\n\n\n  setCc(cc) {\n    if (typeof cc === 'undefined') {\n      return;\n    }\n\n    if (!Array.isArray(cc)) {\n      cc = [cc];\n    }\n\n    this.cc = EmailAddress.create(cc);\n  }\n  /**\n   * Add a single cc\n   */\n\n\n  addCc(cc) {\n    if (typeof cc === 'undefined') {\n      return;\n    }\n\n    this.cc.push(EmailAddress.create(cc));\n  }\n  /**\n   * Set bcc\n   */\n\n\n  setBcc(bcc) {\n    if (typeof bcc === 'undefined') {\n      return;\n    }\n\n    if (!Array.isArray(bcc)) {\n      bcc = [bcc];\n    }\n\n    this.bcc = EmailAddress.create(bcc);\n  }\n  /**\n   * Add a single bcc\n   */\n\n\n  addBcc(bcc) {\n    if (typeof bcc === 'undefined') {\n      return;\n    }\n\n    this.bcc.push(EmailAddress.create(bcc));\n  }\n  /**\n   * Set headers\n   */\n\n\n  setHeaders(headers) {\n    if (typeof headers === 'undefined') {\n      return;\n    }\n\n    if (typeof headers !== 'object' || headers === null) {\n      throw new Error('Object expected for `headers`');\n    }\n\n    this.headers = headers;\n  }\n  /**\n   * Add a header\n   */\n\n\n  addHeader(key, value) {\n    if (typeof key !== 'string') {\n      throw new Error('String expected for header key');\n    }\n\n    if (typeof value !== 'string') {\n      throw new Error('String expected for header value');\n    }\n\n    this.headers[key] = value;\n  }\n  /**\n   * Set custom args\n   */\n\n\n  setCustomArgs(customArgs) {\n    if (typeof customArgs === 'undefined') {\n      return;\n    }\n\n    if (typeof customArgs !== 'object' || customArgs === null) {\n      throw new Error('Object expected for `customArgs`');\n    }\n\n    this.customArgs = customArgs;\n  }\n  /**\n   * Add a custom arg\n   */\n\n\n  addCustomArg(key, value) {\n    if (typeof key !== 'string') {\n      throw new Error('String expected for custom arg key');\n    }\n\n    if (typeof value !== 'string') {\n      throw new Error('String expected for custom arg value');\n    }\n\n    this.customArgs[key] = value;\n  }\n  /**\n   * Set substitutions\n   */\n\n\n  setSubstitutions(substitutions) {\n    if (typeof substitutions === 'undefined') {\n      return;\n    }\n\n    if (typeof substitutions !== 'object') {\n      throw new Error('Object expected for `substitutions`');\n    }\n\n    this.substitutions = substitutions;\n  }\n  /**\n   * Add a substitution\n   */\n\n\n  addSubstitution(key, value) {\n    if (typeof key !== 'string') {\n      throw new Error('String expected for substitution key');\n    }\n\n    if (typeof value !== 'string' && typeof value !== 'number') {\n      throw new Error('String or Number expected for substitution value');\n    }\n\n    this.substitutions[key] = value;\n  }\n  /**\n   * Reverse merge substitutions, preserving existing ones\n   */\n\n\n  reverseMergeSubstitutions(substitutions) {\n    if (typeof substitutions === 'undefined' || substitutions === null) {\n      return;\n    }\n\n    if (typeof substitutions !== 'object') {\n      throw new Error('Object expected for `substitutions` in reverseMergeSubstitutions');\n    }\n\n    this.substitutions = Object.assign({}, substitutions, this.substitutions);\n  }\n  /**\n   * Set substitution wrappers\n   */\n\n\n  setSubstitutionWrappers(wrappers) {\n    if (typeof wrappers === 'undefined' || wrappers === null) {\n      return;\n    }\n\n    if (!Array.isArray(wrappers) || wrappers.length !== 2) {\n      throw new Error('Array expected with two elements for `substitutionWrappers`');\n    }\n\n    this.substitutionWrappers = wrappers;\n  }\n  /**\n   * Reverse merge dynamic template data, preserving existing ones\n   */\n\n\n  deepMergeDynamicTemplateData(dynamicTemplateData) {\n    if (typeof dynamicTemplateData === 'undefined' || dynamicTemplateData === null) {\n      return;\n    }\n\n    if (typeof dynamicTemplateData !== 'object') {\n      throw new Error('Object expected for `dynamicTemplateData` in deepMergeDynamicTemplateData');\n    }\n\n    this.dynamicTemplateData = deepMerge(dynamicTemplateData, this.dynamicTemplateData);\n  }\n  /**\n   * Set dynamic template data\n   */\n\n\n  setDynamicTemplateData(dynamicTemplateData) {\n    if (typeof dynamicTemplateData === 'undefined') {\n      return;\n    }\n\n    if (typeof dynamicTemplateData !== 'object') {\n      throw new Error('Object expected for `dynamicTemplateData`');\n    }\n\n    this.dynamicTemplateData = dynamicTemplateData;\n  }\n  /**\n   * To JSON\n   */\n\n\n  toJSON() {\n    //Get data from self\n    const {\n      to,\n      from,\n      cc,\n      bcc,\n      subject,\n      headers,\n      customArgs,\n      sendAt,\n      substitutions,\n      substitutionWrappers,\n      dynamicTemplateData\n    } = this; //Initialize with mandatory values\n\n    const json = {\n      to\n    }; //Arrays\n\n    if (Array.isArray(cc) && cc.length > 0) {\n      json.cc = cc;\n    }\n\n    if (Array.isArray(bcc) && bcc.length > 0) {\n      json.bcc = bcc;\n    } //Objects\n\n\n    if (Object.keys(headers).length > 0) {\n      json.headers = headers;\n    }\n\n    if (substitutions && Object.keys(substitutions).length > 0) {\n      const [left, right] = substitutionWrappers;\n      json.substitutions = wrapSubstitutions(substitutions, left, right);\n    }\n\n    if (Object.keys(customArgs).length > 0) {\n      json.customArgs = customArgs;\n    }\n\n    if (dynamicTemplateData && Object.keys(dynamicTemplateData).length > 0) {\n      json.dynamicTemplateData = dynamicTemplateData;\n    } //Simple properties\n\n\n    if (typeof subject !== 'undefined') {\n      json.subject = subject;\n    }\n\n    if (typeof sendAt !== 'undefined') {\n      json.sendAt = sendAt;\n    }\n\n    if (typeof from !== 'undefined') {\n      json.from = from;\n    } //Return as snake cased object\n\n\n    return toSnakeCase(json, ['substitutions', 'dynamicTemplateData', 'customArgs', 'headers']);\n  }\n\n} //Export class\n\n\nmodule.exports = Personalization;","map":{"version":3,"sources":["/Users/mihaibadea/thenft/node_modules/@sendgrid/helpers/classes/personalization.js"],"names":["EmailAddress","require","toCamelCase","toSnakeCase","deepClone","deepMerge","wrapSubstitutions","Personalization","constructor","data","to","cc","bcc","headers","customArgs","substitutions","substitutionWrappers","dynamicTemplateData","fromData","Error","from","subject","sendAt","setTo","setFrom","setCc","setBcc","setSubject","setHeaders","setSubstitutions","setSubstitutionWrappers","setCustomArgs","setDynamicTemplateData","setSendAt","Number","isInteger","Array","isArray","create","addTo","push","addCc","addBcc","addHeader","key","value","addCustomArg","addSubstitution","reverseMergeSubstitutions","Object","assign","wrappers","length","deepMergeDynamicTemplateData","toJSON","json","keys","left","right","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\n/**\n * Dependencies\n */\nconst EmailAddress = require('./email-address');\nconst toCamelCase = require('../helpers/to-camel-case');\nconst toSnakeCase = require('../helpers/to-snake-case');\nconst deepClone = require('../helpers/deep-clone');\nconst deepMerge = require('deepmerge');\nconst wrapSubstitutions = require('../helpers/wrap-substitutions');\n\n/**\n * Personalization class\n */\nclass Personalization {\n\n  /**\n   * Constructor\n   */\n  constructor(data) {\n\n    //Init array and object placeholders\n    this.to = [];\n    this.cc = [];\n    this.bcc = [];\n    this.headers = {};\n    this.customArgs = {};\n    this.substitutions = {};\n    this.substitutionWrappers = ['{{', '}}'];\n    this.dynamicTemplateData = {};\n\n    //Build from data if given\n    if (data) {\n      this.fromData(data);\n    }\n  }\n\n  /**\n   * From data\n   */\n  fromData(data) {\n\n    //Expecting object\n    if (typeof data !== 'object') {\n      throw new Error('Expecting object for Mail data');\n    }\n\n    //Convert to camel case to make it workable, making a copy to prevent\n    //changes to the original objects\n    data = deepClone(data);\n    data = toCamelCase(data, ['substitutions', 'dynamicTemplateData', 'customArgs', 'headers']);\n\n    //Extract properties from data\n    const {\n      to, from, cc, bcc, subject, headers, customArgs, sendAt,\n      substitutions, substitutionWrappers, dynamicTemplateData,\n    } = data;\n\n    //Set data\n    this.setTo(to);\n    this.setFrom(from);\n    this.setCc(cc);\n    this.setBcc(bcc);\n    this.setSubject(subject);\n    this.setHeaders(headers);\n    this.setSubstitutions(substitutions);\n    this.setSubstitutionWrappers(substitutionWrappers);\n    this.setCustomArgs(customArgs);\n    this.setDynamicTemplateData(dynamicTemplateData);\n    this.setSendAt(sendAt);\n  }\n\n  /**\n   * Set subject\n   */\n  setSubject(subject) {\n    if (typeof subject === 'undefined') {\n      return;\n    }\n    if (typeof subject !== 'string') {\n      throw new Error('String expected for `subject`');\n    }\n    this.subject = subject;\n  }\n\n  /**\n   * Set send at\n   */\n  setSendAt(sendAt) {\n    if (typeof sendAt === 'undefined') {\n      return;\n    }\n    if (!Number.isInteger(sendAt)) {\n      throw new Error('Integer expected for `sendAt`');\n    }\n    this.sendAt = sendAt;\n  }\n\n  /**\n   * Set to\n   */\n  setTo(to) {\n    if (typeof to === 'undefined') {\n      return;\n    }\n    if (!Array.isArray(to)) {\n      to = [to];\n    }\n    this.to = EmailAddress.create(to);\n  }\n\n  /**\n   * Set from\n   * */\n  setFrom(from) {\n    if (typeof from === 'undefined') {\n      return;\n    }\n    this.from = EmailAddress.create(from);\n  }\n\n  /**\n   * Add a single to\n   */\n  addTo(to) {\n    if (typeof to === 'undefined') {\n      return;\n    }\n    this.to.push(EmailAddress.create(to));\n  }\n\n  /**\n   * Set cc\n   */\n  setCc(cc) {\n    if (typeof cc === 'undefined') {\n      return;\n    }\n    if (!Array.isArray(cc)) {\n      cc = [cc];\n    }\n    this.cc = EmailAddress.create(cc);\n  }\n\n  /**\n   * Add a single cc\n   */\n  addCc(cc) {\n    if (typeof cc === 'undefined') {\n      return;\n    }\n    this.cc.push(EmailAddress.create(cc));\n  }\n\n  /**\n   * Set bcc\n   */\n  setBcc(bcc) {\n    if (typeof bcc === 'undefined') {\n      return;\n    }\n    if (!Array.isArray(bcc)) {\n      bcc = [bcc];\n    }\n    this.bcc = EmailAddress.create(bcc);\n  }\n\n  /**\n   * Add a single bcc\n   */\n  addBcc(bcc) {\n    if (typeof bcc === 'undefined') {\n      return;\n    }\n    this.bcc.push(EmailAddress.create(bcc));\n  }\n\n  /**\n   * Set headers\n   */\n  setHeaders(headers) {\n    if (typeof headers === 'undefined') {\n      return;\n    }\n    if (typeof headers !== 'object' || headers === null) {\n      throw new Error('Object expected for `headers`');\n    }\n    this.headers = headers;\n  }\n\n  /**\n   * Add a header\n   */\n  addHeader(key, value) {\n    if (typeof key !== 'string') {\n      throw new Error('String expected for header key');\n    }\n    if (typeof value !== 'string') {\n      throw new Error('String expected for header value');\n    }\n    this.headers[key] = value;\n  }\n\n  /**\n   * Set custom args\n   */\n  setCustomArgs(customArgs) {\n    if (typeof customArgs === 'undefined') {\n      return;\n    }\n    if (typeof customArgs !== 'object' || customArgs === null) {\n      throw new Error('Object expected for `customArgs`');\n    }\n    this.customArgs = customArgs;\n  }\n\n  /**\n   * Add a custom arg\n   */\n  addCustomArg(key, value) {\n    if (typeof key !== 'string') {\n      throw new Error('String expected for custom arg key');\n    }\n    if (typeof value !== 'string') {\n      throw new Error('String expected for custom arg value');\n    }\n    this.customArgs[key] = value;\n  }\n\n  /**\n   * Set substitutions\n   */\n  setSubstitutions(substitutions) {\n    if (typeof substitutions === 'undefined') {\n      return;\n    }\n    if (typeof substitutions !== 'object') {\n      throw new Error('Object expected for `substitutions`');\n    }\n    this.substitutions = substitutions;\n  }\n\n  /**\n   * Add a substitution\n   */\n  addSubstitution(key, value) {\n    if (typeof key !== 'string') {\n      throw new Error('String expected for substitution key');\n    }\n    if (typeof value !== 'string' && typeof value !== 'number') {\n      throw new Error('String or Number expected for substitution value');\n    }\n    this.substitutions[key] = value;\n  }\n\n  /**\n   * Reverse merge substitutions, preserving existing ones\n   */\n  reverseMergeSubstitutions(substitutions) {\n    if (typeof substitutions === 'undefined' || substitutions === null) {\n      return;\n    }\n    if (typeof substitutions !== 'object') {\n      throw new Error(\n        'Object expected for `substitutions` in reverseMergeSubstitutions'\n      );\n    }\n    this.substitutions = Object.assign({}, substitutions, this.substitutions);\n  }\n\n  /**\n   * Set substitution wrappers\n   */\n  setSubstitutionWrappers(wrappers) {\n    if (typeof wrappers === 'undefined' || wrappers === null) {\n      return;\n    }\n\n    if (!Array.isArray(wrappers) || wrappers.length !== 2) {\n      throw new Error(\n        'Array expected with two elements for `substitutionWrappers`'\n      );\n    }\n    this.substitutionWrappers = wrappers;\n  }\n\n  /**\n   * Reverse merge dynamic template data, preserving existing ones\n   */\n  deepMergeDynamicTemplateData(dynamicTemplateData) {\n    if (typeof dynamicTemplateData === 'undefined' || dynamicTemplateData === null) {\n      return;\n    }\n    if (typeof dynamicTemplateData !== 'object') {\n      throw new Error(\n        'Object expected for `dynamicTemplateData` in deepMergeDynamicTemplateData'\n      );\n    }\n    this.dynamicTemplateData = deepMerge(dynamicTemplateData, this.dynamicTemplateData);\n  }\n\n  /**\n   * Set dynamic template data\n   */\n  setDynamicTemplateData(dynamicTemplateData) {\n    if (typeof dynamicTemplateData === 'undefined') {\n      return;\n    }\n    if (typeof dynamicTemplateData !== 'object') {\n      throw new Error('Object expected for `dynamicTemplateData`');\n    }\n    this.dynamicTemplateData = dynamicTemplateData;\n  }\n\n  /**\n   * To JSON\n   */\n  toJSON() {\n\n    //Get data from self\n    const {\n      to, from, cc, bcc, subject, headers, customArgs, sendAt,\n      substitutions, substitutionWrappers, dynamicTemplateData,\n    } = this;\n\n    //Initialize with mandatory values\n    const json = {to};\n\n    //Arrays\n    if (Array.isArray(cc) && cc.length > 0) {\n      json.cc = cc;\n    }\n    if (Array.isArray(bcc) && bcc.length > 0) {\n      json.bcc = bcc;\n    }\n\n    //Objects\n    if (Object.keys(headers).length > 0) {\n      json.headers = headers;\n    }\n    if (substitutions && Object.keys(substitutions).length > 0) {\n      const [left, right] = substitutionWrappers;\n      json.substitutions = wrapSubstitutions(substitutions, left, right);\n    }\n    if (Object.keys(customArgs).length > 0) {\n      json.customArgs = customArgs;\n    }\n\n    if (dynamicTemplateData && Object.keys(dynamicTemplateData).length > 0) {\n      json.dynamicTemplateData = dynamicTemplateData;\n    }\n\n    //Simple properties\n    if (typeof subject !== 'undefined') {\n      json.subject = subject;\n    }\n    if (typeof sendAt !== 'undefined') {\n      json.sendAt = sendAt;\n    }\n    if (typeof from !== 'undefined') {\n      json.from = from;\n    }\n\n    //Return as snake cased object\n    return toSnakeCase(json, ['substitutions', 'dynamicTemplateData', 'customArgs', 'headers']);\n  }\n}\n\n//Export class\nmodule.exports = Personalization;\n"]},"metadata":{},"sourceType":"script"}